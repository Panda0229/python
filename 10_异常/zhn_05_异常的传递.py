# 异常的传递 —— 当函数/方法执行出现异常，会将异常传递给函数/方法的调用一方
# 如果传递到主程序，仍然没有异常处理，程序才会被终止


def demo1():
    return int(input("输入整数："))


def demo2():
    return demo1()


# 利用异常的传递性，在主程序捕获异常
try:
    print(demo2())

except Exception as result:
    print("未知错误%s" % result)

    # 在开发中，可以在主函数中增加
    # 异常捕获
    # 而在主函数中调用的其他函数，只要出现异常，都会传递到主函数的
    # 异常捕获中
    # 这样就不需要在代码中，增加大量的
    # 异常捕获，能够保证代码的整洁
